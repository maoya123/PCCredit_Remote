<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cardpay.pccredit.jnpad.dao.JnIpadCustAppInfoXxDao">

	<resultMap id="ResultMap"
		type="com.cardpay.pccredit.intopieces.model.IntoPieces">
		<result property="id" column="id" />
		<result property="customerId" column="customer_id" />
		<result property="chineseName" column="chinese_name" />
		<result property="productId" column="product_id" />
		<result property="productName" column="product_name" />
		<result property="cardId" column="card_id" />
		<result property="applyQuota" column="apply_quota" />
		<result property="status" column="status" />
	</resultMap>


	<resultMap id="RetrainResultMap"
		type="com.cardpay.pccredit.jnpad.model.RetrainUserVo">
		<result property="retrainUserName" column="display_name" />
	</resultMap>

	<resultMap id="YunyinstatusResultMap" type="com.cardpay.pccredit.jnpad.model.CustYunyinVo">
		<result property="ksze" column="ksze" />
		<result property="kyze" column="kyze" />
		<result property="kyyeze" column="kyyeze" />
		<result property="yqkhs" column="yqkhs" />
		<result property="hxkhs" column="hxkhs" />
	</resultMap>


	<resultMap id="NotificationResultMap"
		type="com.cardpay.pccredit.notification.model.NotificationMessage">
		<result property="id" column="ID" />
		<result property="userId" column="USER_ID" />
		<result property="noticeType" column="NOTICE_TYPE" />
		<result property="noticeContent" column="NOTICE_CONTENT" />
		<result property="createTime" column="CREATED_TIME" />
		<result property="createBy" column="CREATED_BY" />
		<result property="modifyTime" column="MODIFIED_TIME" />
		<result property="modifyBy" column="MODIFIED_BY" />
	</resultMap>


	<select id="findCustAppInfoXxCount" resultType="int">
		select count(*)
		from customer_application_info c
		left join
		basic_customer_information b
		on c.customer_id = b.id
		where 1=1
		<if test="userId!=null and userId!=''">
		and b.user_id=#{userId}
		</if>
		<if test="status1!=null and status1!=''">
			and STATUS = #{status1}
		</if>

		<if test="status2!=null and status2!=''">
			and STATUS = #{status2}
		</if>

		<if test="status3!=null and status3!=''">
			and STATUS = #{status3}
		</if>

		<if test="status4!=null and status4!=''">
			and STATUS = #{status4}
		</if>
	</select>




	<select id="findCustomerApprovedList" resultMap="ResultMap"
		parameterType="com.cardpay.pccredit.jnpad.filter.CustomerApprovedFilter">
		SELECT * FROM
		(SELECT ROW_.*,ROWNUM ROWNUM_
		FROM (
		select t.id,
		t.customer_id,
		b.chinese_name,
		t.product_id,
		p.product_name,
		b.card_id,
		t.apply_quota,
		t.status
		from customer_application_info t,
		basic_customer_information b,
		product_attribute p
		where t.customer_id = b.id
		and t.product_id = p.id
		<if test="status != null and status != '' ">
			and t.status = #{status}
		</if>
		<if test="userId != null and userId != '' ">
			and b.USER_ID = #{userId}
		</if>
		<if test="productName != null and productName != '' ">
			and p.product_name like '%'||#{productName}||'%'
		</if>
		order by t.id asc
				 	
			<![CDATA[
					) ROW_
				WHERE ROWNUM <= #{limit}*#{page} + #{limit}) 
			WHERE ROWNUM_ > #{limit}*#{page}
			]]>
	</select>

	<select id="findCustomerApprovedCountList" resultType="int"
		parameterType="com.cardpay.pccredit.jnpad.filter.CustomerApprovedFilter">
		select count(*)
		from customer_application_info t,
		basic_customer_information b,
		product_attribute p
		where t.customer_id = b.id
		and t.product_id = p.id
		<if test="status != null and status != '' ">
			and t.status = #{status}
		</if>
		<if test="userId != null and userId != '' ">
			and b.USER_ID = #{userId}
		</if>
		<if test="productName != null and productName != '' ">
			and p.product_name like '%'||#{productName}||'%'
		</if>

		order by t.id asc
	</select>

	<update id="updateCustomerApplicationInfo" parameterType="com.cardpay.pccredit.intopieces.model.IntoPieces">
		update customer_application_info
		<set>
			status = #{status}
		</set>
		where id = #{id}
	</update>


	<select id="calCreditAmt" resultType="String"
		parameterType="com.cardpay.pccredit.jnpad.filter.CustomerApprovedFilter">
		select sum(t.actual_quote) from
		customer_application_info t,
		basic_customer_information b
		where t.customer_id = b.id
		<if test="userId != null and userId != '' ">
			and b.USER_ID = #{userId}
		</if>
	</select>


	<select id="overdueCustomerCount" resultType="int">
		select count(*)
		from t_sarm_specialasset t, basic_customer_information b
		where t.OWNERCODE = b.ty_customer_id
		<if test="userId != null and userId != '' ">
			and b.USER_ID = #{userId}
		</if>
	</select>




	<select id="findNotificationMessageByFilter" resultMap="NotificationResultMap"
		parameterType="map">
		SELECT * FROM
		(SELECT ROW_.*,ROWNUM ROWNUM_
		FROM (

		SELECT * from notification_message t
		WHERE 1=1
		<if test="userId != null and userId != '' ">
			AND T.USER_ID=#{userId}
		</if>
		<if test="noticeType != null and noticeType != '' ">
			AND T.NOTICE_TYPE=#{noticeType}
		</if>
		AND T.IS_CHECK != 1
				   
			<![CDATA[
					) ROW_
				WHERE ROWNUM <= #{limit}*#{page} + #{limit}) 
			WHERE ROWNUM_ > #{limit}*#{page}
			]]>
	</select>

	<select id="findNotificationCountMessageByFilter" resultType="int">
		SELECT count(*) from notification_message t
		WHERE 1=1
		<if test="userId != null and userId != '' ">
			AND T.USER_ID=#{userId}
		</if>
		<if test="noticeType != null and noticeType != '' ">
			AND T.NOTICE_TYPE=#{noticeType}
		</if>
		AND T.IS_CHECK != 1
		AND T.IS_CHECK != 4
	</select>


	<select id="getRewardIncentiveInformation" resultType="String">
		select
		nvl(sum(reward_incentive_information),0) from MANAGER_SALARY t
		where t.year=#{year}
		and t.month=#{month}
		<if test="id != null and id != '' ">
		and t.customer_id=#{id}
		</if>
	</select>


	<select id="getReturnPrepareAmountById" resultType="String">
		select
		TOTAL_RISK_MARGIN from T_RISK_MARGIN t
		where 
		t.customer_id=#{id}
	</select>
	<select id="getSumReturnPrepareAmountById" resultType="String">
		select
		sum(TOTAL_RISK_MARGIN) from T_RISK_MARGIN t
	</select>

	<select id="findYunyinstatus" resultMap="YunyinstatusResultMap">
	    
	     with circle as (
	    SELECT *
		  FROM (select T.BUSICODE,T.CUSTID,T.CNAME,T.CUSTIDNO,T.DEPTCODE,T.TELEPHONE,T.MAINASSURE,T.REQLMT,T.BUSIMANAGER,T.LOANDATE,T.STARTDATE,T.ORIENDDATE,T.ENDDATE,T.INTEREST,T.MONEY,T.BALAMT,T.ACCOUNTSTATE,T.CLOSEDATE,T.FIVECLASS,T.DELAYAMTDAYS,T.DELAYINTERESTDAYS,T.FIRSTINTERESTDATE,T.DEBTINTEREST,T.DEBTINTERESTTIMES,T.NORMALAMT,T.DLAYAMT,T.DLAYDT,T.PAYDEBT,T.INDEBTAMT,T.OUTDEBTAMT,T.BAILAMT,T.CREATE_TIME,ROW_NUMBER() OVER(PARTITION BY busicode ORDER BY OPERDATETIME desc) RN
		          from t_mibusidata T)
		 WHERE RN = 1
	    )
	    
		select 
		(select nvl(sum(a.MONEY),0)
          from t_gccontractmain           a,
               basic_customer_information b,
               t_gccontractmulticlient    c
         where trim(a.KEYCODE) = c.KEYCODE
           and c.custid = b.ty_customer_id
           and a.keyeffectedstate ='1'
           and c.keyeffectedstate ='1'
		<if test="userId != null and userId != '' ">
			and b.USER_ID =#{userId}
		</if>
		) as ksze,

		(select nvl(sum(a.balamt),0)
          from circle a,
               basic_customer_information c
         where  c.ty_customer_id = a.custid
		<if test="userId != null and userId != '' ">
			and c.USER_ID =#{userId}
		</if>
		) as kyze,

		(select nvl(sum(nvl(a.DLAYAMT,0) + nvl(a.INDEBTAMT,0) + nvl(a.OUTDEBTAMT,0)),0)
          from circle a, basic_customer_information c
         where a.custid = c.ty_customer_id
           and (nvl(a.DELAYINTERESTDAYS,0) <![CDATA[ >  ]]> 0 or nvl(a.DELAYAMTDAYS,0) <![CDATA[ >  ]]> 0)
		<if test="userId != null and userId != '' ">
			and c.USER_ID =#{userId}
		</if>
		) as kyyeze,

		(select count(distinct(a.custid))
          from circle a, basic_customer_information b
         where a.custid = b.ty_customer_id
           and (nvl(a.DELAYINTERESTDAYS,0) <![CDATA[ >  ]]> 0 or nvl(a.DELAYAMTDAYS,0) <![CDATA[ >  ]]> 0)
		<if test="userId != null and userId != '' ">
			and b.USER_ID =#{userId}
		</if>
		) as yqkhs,

		'0' as hxkhs
		from dual
	</select>


	<select id="findAccountManagerRetraining" resultMap="RetrainResultMap">
		SELECT u.display_name
		from account_manager_retraining t, sys_user u
		where t.CUSTOMER_MANAGER_ID = u.id
		and t.retrain_id =#{id}
	</select>

	<select id="findNoticeCountByFilter" resultType="int">
		select count(*) from customer_application_info where 1=1 
		and status=#{noticeType}
		AND customer_id in(
		SELECT b.id FROM BASIC_CUSTOMER_INFORMATION b WHERE user_Id =#{userId})
	</select>
	<update id="changeIsLook">
	    
	    UPDATE BASIC_CUSTOMER_INFORMATION SET islook ='0' WHERE id=#{id} and card_Id=#{cardId}
	</update>
	<update id="changeSdhIsLook">
	    UPDATE notification_message SET is_check=#{status} WHERE id=#{id} 
	</update>
</mapper> 